name: 'Release'

on:
  push:
    branches:
      - brand

permissions:
  actions: read
  checks: read
  contents: write
  deployments: read
  id-token: write
  issues: read
  discussions: read
  packages: read
  pages: read
  pull-requests: read
  repository-projects: read
  security-events: read
  statuses: read

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: ESLint
        uses: './.github/actions/eslint'

  typescript:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: TypeScript
        uses: './.github/actions/typescript'

  publish:
    needs: [eslint, typescript]
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}
      cancel-in-progress: true
    env:
      HUSKY: 0
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: 'brand'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.10.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Publish latest
        env:
          NPM_TOKEN: ${{ secrets.CI_NPM_TOKEN }}
        run: |
          git config --global user.email "example@example.com"
          git config --global user.name "example-user"
          npm config --global set //registry.npmjs.org/:_authToken=${{ secrets.CI_NPM_TOKEN }}
          pnpm install --frozen-lockfile
          pnpm run prepack
          pnpm run prepareForPublic
          pnpm run build:all
          pnpm publish --no-git-checks
